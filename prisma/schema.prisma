generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  users             users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Article {
  id       Int    @id @default(autoincrement())
  name     String
  text     Json
  topic_id Int    @unique
  Topic    Topic  @relation(fields: [topic_id], references: [id])
}

model Menu {
  id    Int    @id @default(autoincrement())
  name  String
  Topic Topic?
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Topic {
  id      Int      @id @default(autoincrement())
  name    String
  menu_id Int      @unique
  Article Article?
  Menu    Menu     @relation(fields: [menu_id], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model users {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  Account       Account[]
  Session       Session[]
}

enum Role {
  ADMIN
  USER
}
